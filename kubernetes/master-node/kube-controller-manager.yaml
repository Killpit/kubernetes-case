apiVersion: v1
kind: Pod
metadata:
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager
  namespace: kube-system
spec:
  containers:
  - name: kube-controller-manager
    image: kubeimage/kube-controller-manager-amd64  # Replace with desired version
    command:
    - /usr/local/bin/kube-controller-manager
    - --leader-elect=true
    - --leader-election-resource-lock=leases
    - --leader-election-namespace=kube-system
    - --concurrent-deployment-sync=10
    # Add other necessary flags based on your environment
    - --kubeconfig=/etc/kubernetes/kube-controller-manager.conf
    - --root-ca-file=/etc/kubernetes/pki/ca-certificates.crt
    - --cluster-name=your-cluster-name
    - --cluster-cidr=your-cluster-cidr
    - --service-cluster-ip-range=your-service-ip-range
    - --allocate-node-cidrs=true
    - --terminated-pod-gc-threshold=1000 1>>/var/log/kube-controller-manager.log 2>&1
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 200m
    volumeMounts:
    - mountPath: /etc/kubernetes/kube-controller-manager.conf
      name: kube-controller-manager-config
      readOnly: true
    - mountPath: /etc/kubernetes/pki/ca-certificates.crt
      name: ca-certs
      readOnly: true
    - mountPath: /var/log/kube-controller-manager.log
      name: logfile
      readOnly: false
  volumes:
  - name: kube-controller-manager-config
    # Replace with ConfigMap or Secret for configuration
  - name: ca-certs
    # Replace with ConfigMap or Secret for CA certificates
  - name: logfile
    hostPath:
      path: /var/log/kube-controller-manager.log
      type: FileOrCreate